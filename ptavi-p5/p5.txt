Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vídeo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en
   GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio
   en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder 
   editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando
   los cambios que vayas realizando.

   Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a
   tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se
   recomienda hacer frecuentes commits, pero el push al final.

Análisis de una sesión SIP:

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que se puede abrir con 
Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero 
p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente 
   de VoIP para GNOME. Responde a las siguientes cuestiones:
   * ¿Cuántos paquetes componen la captura?
        Hay un total de 954 paquetes.
   * ¿Cuánto tiempo dura la captura?
        La captura tiene una duración total de 56.149345 segundos.
   * ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
     trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
        La captura se realizó en la IP 192.168.1.34, el rango 192.168.0.0 corresponde
        a una IP privada.

3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú
   de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede 
   ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
   * ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando de una aplicación
     que transmite en tiempo real?
        El porcentaje de tráfico es mayor para el protocolo UDP, con el 96.2% de los
        paquetes.
        Tiene sentido, ya que als transmisiones en tiempo real suelen utilizar UDP.
   * ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
     ¿Cuáles crees que son señal y cuáles ruido?
        Podemos ver:
            - Internet Protocol Version 4 (IPv4)
            - Domain Name Service (DNS)
            - Session Initiation Protocol (SIP)
            - Real-Time Transport Protocol (RTP)
            - Real-time Transport Control Protocol (RTCP)
            - Hypertext Transfer Protocol (HTTP)
            - Internet Control Message Protocol (ICMP)
            - Address Resolution Protocol (ARP)

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs.
   La captura que estamos viendo incluye desde la inicialización (registro) de la 
   aplicación hasta su finalización, con una llamada entremedias.
   * Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen
     lugar esos envíos?
        Tenemos envíos SIP en los intervalos (en segundos): 6-8, 13-15, 15-17, 37-40 y 
        desde el 54 hasta el final.
   * Y los paquetes con RTP, ¿cuándo se envían?
        Los paquetes RTP se comienzan a enviar a los 16 segundos y se continuarán
        enviando hasta el final de la comunicación.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
   * ¿Qué servicio es el utilizado en estas tramas?
        En las cuatro primeras tramas se utiliza DNS.
   * ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
        La dirección destino del primer paquete será la dirección del servidor de
        nombres de Ekiga: 80.58.61.250.
   * ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
        La IP que devuelve está en el campo Info del segundo paquete y será:
        86.64.162.35.

6. A continuación, hay más de una docena de tramas TCP/HTTP.
   * ¿Podrías decir la URL que se está pidiendo?
        En el primer paquete HTTP, el procedimiento GET pide: http://ekiga.net/ip/
   * ¿Qué user agent (UA) la está pidiendo?
        En el primer paquete HTTP, el User-Agent es Ekiga.
   * ¿Qué devuelve el servidor?
        La respuesta está en el paquete 10, y es un 200 OK con una línea de texto:
        83.36.48.212.
   * Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, 
     ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
        Recibimos una IP, pero ésta no se corresponde a la de la captura, ya que
        la IP que nos devuelve el navegador es nuestra IP, que es privada, y la de la 
        captura es pública.

7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
   * ¿Por qué se hace uso de este protocolo?
        Al tener un router NAT como intermediario se necesita utilizar este protocolo.
   * ¿Podrías decir si estamos tras un NAT o no?
        Sí, estamos tras un NAT, porque somos nosotros somos los que pedimos al router
        atarnos a él.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es 
   desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo 
   usuario registra su localización en un servidor Registrar. El Registrar guarda 
   información sobre los usuarios en un servidor de localización que puede ser utilizado 
   para localizar usuarios.
   * ¿Qué dirección IP tiene el servidor Registrar?
        La IP del Registrar será:
            Sent-by Address: 83.36.48.212
   * ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
        El puerto del Registrar será:
            Sent-by port: 5063.
   * ¿Qué método SIP utiliza el UA para registrarse?
        El método REGISTER.
   * Además de REGISTER, ¿podrías decir qué instrucciones SIP entiende el UA?
        Además del REGISTER, el UA entiende:
            - INVITE.
            - ACK.
            - OPTIONS.
            - BYE.
            - CANCEL.
            - NOTIFY.
            - REFER.
            - MESSAGE.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
   * ¿Se registra con éxito en el primer intento?
        No, por eso el servido envía un mensaje 401 Unauthorized.
   * ¿Cómo sabemos si el registro se ha realizado correctamente o no?
        El registro será correcto si se recibe un 200 OK del servidor.
   * ¿Podrías identificar las diferencias entre el primer intento y el segundo de 
     registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
        En el primer intento no se introduce el campo Authorization, que sí estará
        en el segundo intento.
   * ¿Cuánto es el valor del tiempo de expiración de la sesió? Indica las unidades.
        El valor del tiempo de expiración está en el campo Expires, y tiene un valor
        de 3600 segundos.

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de 
    eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El 
    servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
    * ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
        Esta información aparece en el campo From.
    * ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
        Contiene la información sobre la sesión SIP.
        Utiliza el protocolo SDP.
    * ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
        No tiene éxito en el primer intento.
        Tiene que volver a enviar un segundo INVITE.
    * ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se 
      debe esto?
        El Length del segundo INVITE es mayor que el el primero, ya que incluye el
        Proxy-Authorization.
        Esto es debido a que el servidor envió un mensaje 407 Proxy Authentication 
        Required.

11. Una vez conectado, estudia el intercambio de tramas.
    * ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
        Se utlizan los protocolos RTP y H.261.
        RTP es un protocolo para intercambio de datos a tiempo real.
        H.261 es un estándar de compresión de video.
    * ¿Cuál es el tamaño de paquete de los mismos?
        Los paquetes de RTP tienen un tamaño fijo de 214 bytes.
        Los paquetes de H.261 tienen un tamaño variable, se envían de dos en dos,
        las dos primeras parejas tienen más de 1000 bytes cada uno, para el resto
        de paquetes el primero tendrá siempre más de 1000 bytes y el segundo oscilará
        entre los 200 y los 800 bytes.
    * ¿Se utilizan bits de padding?
        El bit de padding está a 0 en todos los paquetes del intercambio.
    * ¿Cuál es la periodicidad de los paquetes (en origen; nota que la captura es en 
      destino)?
        Aproximadamente un paquete de RTP cada 0.24 segundos.
    * ¿Cuántos bits/segundo se envían?
        Omitiendo los paquetes de H.261, se enviarán 214 bytes cada 0.24 segundos, es
        decir, una velocidad de 71.3 bits/segundo.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos 
    mirando los flujos RTP.
    * ¿Cuántos flujos hay? ¿Por qué?
        Hay dos flujos, uno para H.261 y otro para los paquetes de RTP.
    * ¿Cuántos paquetes se pierden?
        No se pierde ningún paquete en ninguno de los flujos.
    * ¿Cuál es el valor máximo del delta? ¿Y quá es lo que significa el valor de delta?
        Para los paquetes de H.261 el delta es de 1290.479 ms y para los paquetes de
        RTP 1290.444 ms.
        El delta es el tiempo medio que pasa entre un paquete y el siguiente.
    * ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Crees 
      que estamos ante una conversación de calidad?
        Para RTP el jitter máximo será de 119.635 ms y el jitter medio 42.5 ms.
        Para H.261 el jitter máximo será de 183.096 ms y el jitter medio 153.24 ms.
        El jitter indica la latencia máxima y la latencia de media de la comunicación.
        Con estos valores sí estaríamos ante una conversación de calidad. 

13. Elige un paquete RTP de audio. Analiza el flujo de audio en:
    Telephony -> RTP -> Stream Analysis.
    * ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
        En ambos casos vale 0 ms.
    * ¿Podemos saber si éste es el primer paquete que nos han enviado?
        Sí, éste será el primer paquete enviado si la delta es cero.
    * Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
        En el 246 está en 5.76 ms y en el 247 cambia a 38.82 ms.
    * ¿A qué se debe el cambio tan brusco del jitter?
        Al haber un crecimiento muy grande en la delta, que pasa de 24.03 ms en el 
        paquete 246 a 554.74 ms en el paquete 247, el jitter se incrementará también.
    * ¿Es comparable el cambio en el valor de jitter con el del delta? ¿Cual es más grande?
        El cambio en el jitter depende del cambio en el delta, el incremento del
        jitter será mayor que el del delta, ya que el delta pasa de 5.76 ms a 38.82 ms.
        El cambio será mayor en el jitter.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP 
    capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
    * ¿Cuánto dura la conversación?
        Unos 37.8 segundos.
    * ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
        Hay un SSRC para cada flujo, para RTP será 0xbf4afd37, y para H.261 será
        0x43306582.
        No hay CRCs.

15. Identifica la trama donde se finaliza la conversación.
    * ¿Qué método SIP se utiliza?
        Se utiliza el método BYE.
    * ¿En qué trama(s)?
        En los paquetes 924, 925, 927 y 933.
    * ¿Por qué crees que se envía varias veces?
        Porque se continúa enviando hasta recibir un mensaje 200 OK.

16. Finalmente, se cierra la aplicación de VozIP.
    * ¿Por qué aparece una instrucción SIP del tipo REGISTER?
        Para confirmar que se ha cerrado la sesión.
    * ¿En qué trama sucede esto?
        En el 950.
    * ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al 
      principio de la sesión)?
        En el campo Expires, en el caso de la segunda estrá a 0 y en el de la primera
        está a 3600.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirígete a la web http://www.ekiga.net con el navegador y créate una cuenta. Lanza 
    Ekiga, y configúralo con los datos de la cuenta que te acabas de crear. Comprueba que 
    estás conectado (En la barra al final de la ventana podrás ver "Connected"). Al
    terminar, cierra completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net. 
    Recuerda que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo 
    el proceso.

19. Observa las diferencias en el inicio de la conversación entre el entorno del 
    laboratorio y el del ejercicio anterior:
    * ¿Se utilizan DNS y STUN? ¿Por qué?
        DNS sí sería necesario usarlo, ya que hay que es la única forma de contactar con
        el servidor registrar. En el caso de STUN no haría falta, ya que sólo se usa si
        se está detrás de un router NAT.
    * ¿Son diferentes el registro y la descripción de la sesión?
        El registro utilizará SIP, mientras que la descripción de la sesión estará en
        SDP.

20. Identifica las diferencias existentes entre esta conversación y la conversación 
    anterior:
    * ¿Cuántos flujos tenemos?
        Tenemos dos flujos, uno para el audio y otro para el vídeo.
    * ¿Cuál es su periodicidad?
        Aproximadamente un paquete RTP cada 0.016 segundos.
    * ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
        El valor máximo del delta es de 30.559 ms, el valor máximo del jitter es
        5.540 ms y el valor medio del jitter es 3.796 ms.
    * ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo 
      un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener 
      la calidad necesaria.
        En la pestaña Telephony se escoge VoIP Calls, se le da un valor al buffer de 
        jitter y se pulsa Play y Decode.
    * ¿Sabrías decir qué tipo de servicio ofrece sip:500@ekiga.net?
        Es un servidor de echo.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como 
    p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás 
    añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

